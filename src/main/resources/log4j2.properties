#################Defining Output folder and the Appenders####################################
property.logs.directory = logs
property.filename = appLogs
property.dateFormat = yyyy-MM-dd.HH
appenders = rolling, console

##################Defining the appender for logging to Console################################
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
#%-5level: Prints the level of the log message in a right-aligned fashion
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] (%F:%L) - %m%n

###################Defining the appender for logging to a File(Rolling File)###################
appender.rolling.type = RollingFile
appender.rolling.name = File
appender.rolling.fileName = ${logs.directory}/${filename}.log
#Roll logs to below mentioned location, logs will be compressed on each roll, as we have specified yyyy-MM-dd, so logs are being rolled daily
#Had we given yyyy-MM-dd-HH-mm-ss then logs are rolled every second.
#Appender.rolling.policies.time.interval , this property basically defines how frequently to roll logs in that time frame
#If I delete this file then it does not get auto generated until the next time interval(next day in this case)
appender.rolling.filePattern = ${logs.directory}/archive/${filename}-%d{yyyy-MM-dd}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] (%F:%L) - %m%n
appender.rolling.policies.type = Policies
#Using a time-based roll policy
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
#Rolling logs on a daily basis
appender.rolling.policies.time.interval = 1
#Align rolls on the day boundary (as opposed to rolling every twenty-four hours)
appender.rolling.policies.time.modulate = true

##################Defining the root logger level and the rootlogger appenders#####################
rootLogger.level = INFO
rootLogger.appenderRefs = rolling, console
rootLogger.appenderRef.console.ref = STDOUT
rootLogger.appenderRef.rolling.ref = File